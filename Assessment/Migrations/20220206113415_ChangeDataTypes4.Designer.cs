// <auto-generated />
using System;
using Assessment.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assessment.Migrations
{
    [DbContext(typeof(EFModel))]
    [Migration("20220206113415_ChangeDataTypes4")]
    partial class ChangeDataTypes4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assessment.ORM.DataItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Circulating_Supply")
                        .HasColumnType("float");

                    b.Property<int>("Cmc_Rank")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_Added")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Last_Updated")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Max_Supply")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Market_Pairs")
                        .HasColumnType("int");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RetrievedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total_Supply")
                        .HasColumnType("float");

                    b.Property<float?>("self_reported_circulating_supply")
                        .HasColumnType("real");

                    b.Property<float?>("self_reported_market_cap")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("RetrievedOn");

                    b.ToTable("DateItems", (string)null);
                });

            modelBuilder.Entity("Assessment.ORM.Fiat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataItemId")
                        .HasColumnType("int");

                    b.Property<double>("Fully_Diluted_Market_Cap")
                        .HasColumnType("float");

                    b.Property<DateTime>("Last_updated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Market_Cap")
                        .HasColumnType("float");

                    b.Property<float>("Market_Cap_Dominance")
                        .HasColumnType("real");

                    b.Property<double>("Percent_Change_1h")
                        .HasColumnType("float");

                    b.Property<float>("Percent_Change_24h")
                        .HasColumnType("real");

                    b.Property<float>("Percent_Change_7d")
                        .HasColumnType("real");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Volume_24h")
                        .HasColumnType("float");

                    b.Property<double>("Volume_Change_24h")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DataItemId");

                    b.ToTable("Fiat", (string)null);
                });

            modelBuilder.Entity("Assessment.ORM.Fiat", b =>
                {
                    b.HasOne("Assessment.ORM.DataItem", null)
                        .WithMany("quotes")
                        .HasForeignKey("DataItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assessment.ORM.DataItem", b =>
                {
                    b.Navigation("quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
